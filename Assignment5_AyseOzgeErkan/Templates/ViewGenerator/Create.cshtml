@model Assignment5_AyseOzgeErkan.Models.ErrorViewModel

@{
    var viewDataTypeName = Model.GetType().Name;
    bool dateTimePickerFound = false;
}

<!-- If you're using a layout, set it here -->
@{
    Layout = "_Layout";  <!-- Adjust based on your layout file -->
}

<div class="container">
    <h1>@ViewData["Title"]</h1>
    <hr />

    <!-- Display any TempData message -->
    @if (TempData["Message"] is not null)
    {
        <p class="text-danger">
            @TempData["Message"]
        </p>
    }

    <!-- Form to create or edit the model -->
    <form asp-action="Save" autocomplete="off">
        @Html.AntiForgeryToken()

        <!-- Validation summary for model errors -->
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <!-- Loop over properties in the model -->
        @foreach (var property in Model.GetType().GetProperties())
        {
            if (!property.CanWrite || property.GetCustomAttributes(typeof(System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute), true).Any())
            {
                continue; // Skip read-only or non-scaffold properties
            }

            <!-- Handle foreign keys -->
            if (property.Name.EndsWith("Id"))
            {
                <div class="row mb-3">
                    <label asp-for="@(property.Name)" class="col-2 col-form-label fw-bold"></label>
                    <div class="col-10">
                        <select asp-for="@property.Name" class="form-select" asp-items="ViewBag.@property.Name">
                            <option value="">-- Select --</option>
                        </select>
                        <span asp-validation-for="@property.Name" class="text-danger"></span>
                    </div>
                </div>
                continue;
            }

            <!-- Handle boolean properties -->
            if (property.PropertyType == typeof(bool))
            {
                <div class="row mb-3">
                    <label asp-for="@property.Name" class="col-2 col-form-label fw-bold"></label>
                    <div class="col-10 pt-2">
                        <input type="checkbox" asp-for="@property.Name" class="form-check-input" />
                    </div>
                </div>
                continue;
            }

            <!-- Handle DateTime properties -->
            if (property.PropertyType == typeof(DateTime) || property.PropertyType == typeof(DateTime?))
            {
                dateTimePickerFound = true;
                <div class="row mb-3">
                    <label asp-for="@property.Name" class="col-2 col-form-label fw-bold"></label>
                    <div class="col-10">
                        <input asp-for="@property.Name" class="form-control datetimepicker" type="text" />
                        <span asp-validation-for="@property.Name" class="text-danger"></span>
                    </div>
                </div>
                continue;
            }

            <!-- Handle other properties -->
            <div class="row mb-3">
                <label asp-for="@property.Name" class="col-2 col-form-label fw-bold"></label>
                <div class="col-10">
                    <input asp-for="@property.Name" class="form-control" />
                    <span asp-validation-for="@property.Name" class="text-danger"></span>
                </div>
            </div>
        }

        <!-- Form buttons -->
        <hr />
        <div class="row mb-3">
            <div class="offset-2 col-10">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="reset" class="btn btn-outline-primary">Reset</button>
                <a asp-action="Index">Back to List</a>
            </div>
        </div>
    </form>
</div>

<!-- Add scripts section if necessary -->
@if (dateTimePickerFound)
{
    @section Scripts {
        <script>
            // Initialize date-time picker here if you're using one
        </script>
    }
}
